import sys
import time
from pprint import pprint
from datalogging.plotting_base import PlotListener

class Debug(PlotListener):
    def __init__(self, *args, **kwargs):
        self.update_count = 0
        super().__init__(*args, **kwargs)

    def prepare_data(self, data, timestamps, messages, steps):
        latest_payload = data[-1]
        latest_time = timestamps[-1]
        latest_msg = messages[-1]
        latest_step = steps[-1]
        n_total = len(timestamps)
        return latest_payload, latest_time, latest_msg, latest_step, n_total

    def initialize(self, latest_payload, latest_time, latest_msg, latest_step, n_total):
        print(f"Listener init with {n_total} collected log events so far")

    def update(self, latest_payload, latest_time, latest_msg, latest_step, n_total):
        self.update_count += 1
        print(f"\nUpdate {self.update_count}: Collected {n_total} log events in buffer."
             f"\nLatest was logged at {latest_time} (step: {latest_step}) "
             f"with message '{latest_msg}' and data:")
        pprint(latest_payload)
        time.sleep(1)


if __name__ == '__main__':
    try:
        port = int(sys.argv[1])
    except Exception as e:
        print(e)
        print('\nUsage example:\n"python -m datalogging.debug 15001"')
    else:
        plotter = Debug(port=port)
        plotter.start()
